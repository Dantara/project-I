type matrix is array[3] array[3] real

routine get_identity(): matrix is
    var identity : matrix
    identity[1][1] := 1
    identity[2][2] := 1
    identity[3][3] := 1
    return identity
end

routine get_determinant(m: matrix) : real is
    var a is m[1][1]
    var b is m[1][2]
    var c is m[1][3]
    var d is m[2][1]
    var e is m[2][2]
    var f is m[2][3]
    var g is m[3][1]
    var h is m[3][2]
    var i is m[3][3]

    return a * (e * i - f * h) - b * (d * i - f * g) + c * (d * h - e * g)
end

routine add(m1: matrix, m2: matrix) : matrix is
    var result : matrix

    for i in 1..3 loop
        for j in 1..3 loop
           result[i][j] := m1[i][j] + m2[i][j]
        end
    end

    return result
end

routine main() is
    var i is get_identity()
    printReal(get_determinant(i))

    var a is add(i, get_identity())
    printReal(get_determinant(a))
end